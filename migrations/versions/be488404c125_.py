"""Update user management and remove datasets in favor of projects

Revision ID: be488404c125
Revises: a64169f38d7c
Create Date: 2019-03-27 06:20:41.384731

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.schema import Sequence, CreateSequence

# revision identifiers, used by Alembic.
revision = 'be488404c125'
down_revision = 'a64169f38d7c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'admin')
    op.drop_column('users', 'pwhash')
    op.drop_column('users', 'user_id')
    op.add_column('users', sa.Column('id', sa.Integer(), nullable=False))
    op.create_primary_key('pk_user', 'users', ['id'])
    op.execute(CreateSequence(Sequence('users_id_seq')))
    op.alter_column("users", "id", nullable=False, server_default=sa.text(
        "nextval('users_id_seq'::regclass)"))
    op.add_column('users', sa.Column('is_active', sa.Boolean(),
                                     server_default='1', nullable=False))
    op.add_column('users', sa.Column('password', sa.String(
        length=255), server_default='', nullable=False))
    op.alter_column('users', 'username',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('projects',
                    sa.Column('project_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('path', sa.String(), nullable=True),
                    sa.Column('active', sa.Boolean(), nullable=True),
                    sa.Column('creation_date', sa.DateTime(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('project_id')
                    )
    op.create_index(op.f('ix_projects_user_id'),
                    'projects', ['user_id'], unique=False)
    op.create_table('user_roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('role_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['role_id'], ['roles.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('task',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('name', sa.String(length=128), nullable=True),
                    sa.Column('description', sa.String(
                        length=128), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('complete', sa.Boolean(), nullable=True),
                    sa.Column('result', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['project_id'], ['projects.project_id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_task_name'), 'task', ['name'], unique=False)

    op.add_column('objects', sa.Column(
        'project_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_objects_project_id'),
                    'objects', ['project_id'], unique=False)
    op.drop_index('ix_objects_dataset_id', table_name='objects')
    op.drop_constraint('objects_dataset_id_fkey',
                       'objects', type_='foreignkey')
    op.create_foreign_key('objects_project_id_fkey', 'objects', 'projects', [
                          'project_id'], ['project_id'])
    op.drop_column('objects', 'dataset_id')
    op.drop_table('datasets')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('user_id', sa.INTEGER(),
                                     autoincrement=True, nullable=False))
    op.add_column('users', sa.Column('pwhash', sa.VARCHAR(),
                                     autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('admin', sa.BOOLEAN(),
                                     autoincrement=False, nullable=True))
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.alter_column('users', 'username',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_column('users', 'password')
    op.drop_column('users', 'is_active')

    op.add_column('objects', sa.Column(
        'dataset_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint('objects_project_id_fkey',
                       'objects', type_='foreignkey')

    op.create_index('ix_objects_dataset_id', 'objects',
                    ['dataset_id'], unique=False)
    op.drop_index(op.f('ix_objects_project_id'), table_name='objects')
    op.drop_column('objects', 'project_id')
    op.create_table('datasets',
                    sa.Column('dataset_id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('author', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('path', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('active', sa.BOOLEAN(),
                              autoincrement=False, nullable=True),
                    sa.Column('creation_date', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('dataset_id', name='datasets_pkey')
                    )
    op.drop_index(op.f('ix_task_name'), table_name='task')
    op.drop_table('task')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_projects_user_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_table('roles')
    op.create_foreign_key('objects_dataset_id_fkey', 'objects', 'datasets', [
                          'dataset_id'], ['dataset_id'])
    op.drop_column('users', 'id')
    # ### end Alembic commands ###
